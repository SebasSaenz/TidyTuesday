---
title: "TidyTuesday 2023/4 - ALONE data by {Alone}}"
author: "Johan S. Sáenz"
date: "2023-01-28"
output:
  html_document:
  theme: paper
highlight: kate
editor: source
knitr:
  opts_chunk:
    dev: "ragg_png"
    retina: 2
    dpi: 600
---

```{r}
#| label: Libraries
#| message: false
#| warning: false
library(tidyverse)
library(ggradar)
library(ggtext)
library(showtext)
library(glue)
library(emojifont)
```

# Data

```{r}
#| label: data
#| message: false
#| warning: false
survivalists <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-01-24/survivalists.csv')
loadouts <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-01-24/loadouts.csv')
```

# Wrangling data

```{r}
#| label: wrangling-data
#| message: false
#| warning: false
season4_last_position <- survivalists %>% 
  filter(season == 4 & result == 7) %>% 
  inner_join(loadouts, by = c("name", "season")) %>% 
  select(name, result, item) %>% 
  mutate(result = ifelse(result == 7, 10, result))
  


df <- survivalists %>% 
  inner_join(loadouts, by = c("name", "season")) %>% 
  filter(result == 1 | result == 10) %>% 
  select(name, result, item) %>%
  rbind(season4_last_position) %>% 
  count(result, item) %>%
  #filter(n > 1) %>% 
  complete(result, item) %>% 
  mutate(result =ifelse(result==1, "Winner", "First tapped out"),
         n = ifelse(is.na(n), 0, n),
         n = ifelse(n > 10, 10, n), # saws sum 11 because one participant took 2
         n = n/10) %>% 
  pivot_wider(names_from = item, values_from = n) %>% 
  rename(group = result)
```

# Fonts and titles

```{r}
#| label: fonts-titles
#| message: false
#| warning: false
font_add_google("Secular One", "secularone")
font_add_google("Roboto", "roboto")

# Showtext will be automatically invoked when needed
showtext_auto()

logo_txt <- "white"

twitter <- glue("<span style='font-family:\"fontawesome-webfont\";color:{logo_txt}'>{emojifont::fontawesome('fa-twitter')}</span>")

github <- glue("<span style='font-family:\"fontawesome-webfont\";color:{logo_txt}'>{emojifont::fontawesome('fa-github')}</span>")

title <- str_wrap(glue("A kit to survive ALONE"))
subtitle <- str_wrap(glue("To survive you need a trapping wire, gillnet and multitool. Thos tools were<br /> the most popular among the winners of the TV-show ALONE compared with<br /> the survivalists that first tapped out. The radarplot shows the proportion of<br /> survivalists that selected each object."))
caption <- str_wrap(glue(
    "Data source: rtrek • {twitter} @SaenzJohanS • Code: {github} SebasSaenz/TidyTuesday"))
```

# Plot

```{r}
plot <- df %>% 
  ggradar(font.radar = "secularone",
          group.colours = c("#3e363f", "darkgreen"),
          grid.label.size = 15,
          axis.label.size = 9,
          group.point.size = 3,
          group.line.width = 1,
          fill = TRUE,
          fill.alpha = 0.4,
          background.circle.colour = "#547C73",
          axis.line.colour = "darkgrey",
          gridline.min.colour = "black",
          gridline.mid.colour = "black",
          gridline.max.colour = "black",
          legend.position = "bottom",) +
  labs(title = title,
       subtitle = subtitle,
       caption = caption) +
  theme(plot.background = element_rect(colour = "#547C73", 
                                            fill = "#547C73"),
        panel.background = element_rect(colour = "#547C73",
                                             fill = "#547C73"),
        legend.key = element_rect(fill = NA, color = NA),
        legend.text = element_text(colour = "white",
                                   size = 30),
        legend.background = element_blank(),
        plot.title = element_text(family = "secularone",
                                  size = 75,
                                  color = "#003554",
                                  face = "bold",
                                  hjust = 0.5),
        plot.subtitle = element_markdown(family = "secularone",
                                         size= 35,
                                         color = "#003554",
                                         lineheight = 0.5,
                                         hjust = 0),
        plot.caption = element_markdown(family="roboto",
                                        colour = "white",
                                        hjust = 0.5, 
                                        size = 25),
        plot.margin = margin(10,5,5,10))

plot$layers[[1]]$aes_params <- c(plot$layers[[1]]$aes_params, colour = "white")
plot$layers[[5]]$aes_params <- c(plot$layers[[5]]$aes_params, colour = "white")
plot$layers[[6]]$aes_params <- c(plot$layers[[6]]$aes_params, colour = "white")
plot$layers[[12]]$aes_params <- c(plot$layers[[12]]$aes_params, colour = "white")
plot$layers[[13]]$aes_params <- c(plot$layers[[13]]$aes_params, colour = "white")
plot$layers[[14]]$aes_params <- c(plot$layers[[14]]$aes_params, colour = "white")
plot
```

```{r}
ggsave(filename = "../../plots/alone.png", width = 6, height = 7)
```
